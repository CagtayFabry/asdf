# We set the language to c because python isn't supported on the MacOS X nodes
# on Travis. However, the language ends up being irrelevant anyway, since we
# install Python ourselves using conda.
language: c

os:
    - linux

# Use Travis' container-based architecture
sudo: false

addons:
  apt:
    packages:
    - graphviz
    - texlive-latex-extra
    - dvipng

env:
    global:
        # The following versions are the 'default' for tests, unless
        # overidden underneath. They are defined here in order to save having
        # to repeat them for all configurations.
        - PYTHON_VERSION=3.6
        - PYTEST_VERSION=3.7
        - ASTROPY_VERSION=stable
        - NUMPY_VERSION=stable
        - PIP_DEPENDENCIES='pytest-faulthandler importlib_resources'
        - CONDA_DEPENDENCIES='semantic_version jsonschema pyyaml six lz4 pytest-astropy'
        - GWCS_GIT='git+git://github.com/spacetelescope/gwcs.git#egg=gwcs'
        - GWCS_PIP='gwcs'
        - MAIN_CMD='python setup.py'
        - SETUP_CMD='test --remote-data'

    matrix:
        # Make sure that installation does not fail
        - SETUP_CMD='install'
        # Make sure README will display properly on pypi
        - PIP_DEPENDENCIES='twine' TWINE_CHECK=1
        - PYTHON_VERSION=3.5 SETUP_CMD='test'
        - PYTHON_VERSION=3.6 SETUP_CMD='test'
        - PYTHON_VERSION=3.7 PYTEST_VERSION=3.8 SETUP_CMD='test'

matrix:
    fast_finish: true
    include:

        # Do a coverage test
        - env: SETUP_CMD='test --coverage --open-files --remote-data'

        # Check for sphinx doc build warnings - we do this first because it
        # may run for a long time
        - env: SETUP_CMD='build_docs -w'

        # Do a code style check
        - env: MAIN_CMD="flake8 asdf --count" SETUP_CMD=''

        # try older numpy versions
        - env: PYTHON_VERSION=3.5 NUMPY_VERSION=1.11 SETUP_CMD='test'
        - env: NUMPY_VERSION=1.12 SETUP_CMD='test'

        # run a test using native pytest
        # also test against development version of Astropy
        - env: MAIN_CMD='pytest' SETUP_CMD='' ASTROPY_VERSION=development
               GWCS_PIP="$GWCS_GIT"
               PYTEST_VERSION=3.8

        # latest stable versions
        - env: NUMPY_VERSION=stable SETUP_CMD='test'

        # Test against development version of numpy (this job can fail)
        - env: NUMPY_VERSION=development SETUP_CMD='test'

        # Try a run on OSX
        - os: osx
          env: NUMPY_VERSION=stable SETUP_CMD='test'

        # Test against latest version of jsonschema
        - env: PIP_DEPENDENCIES='jsonschema pytest-faulthandler importlib_resources'

    allow_failures:
        - env: NUMPY_VERSION=development SETUP_CMD='test'
        - env: PIP_DEPENDENCIES='jsonschema pytest-faulthandler importlib_resources'

install:
    - git clone git://github.com/astropy/ci-helpers.git
    - source ci-helpers/travis/setup_conda.sh
    - python -m pip install --no-deps $GWCS_PIP
    - python setup.py install

script:
    - if [[ $TWINE_CHECK ]]; then
        python setup.py build sdist;
        twine check dist/*;
      else
        $MAIN_CMD $SETUP_CMD;
      fi

after_success:
    # If coveralls.io is set up for this package, uncomment the line
    # below and replace "packagename" with the name of your package.
    # The coveragerc file may be customized as needed for your package.
    - if [[ $SETUP_CMD == 'test --coverage --open-files --remote-data' ]]; then coveralls --rcfile='asdf/tests/coveragerc'; fi
